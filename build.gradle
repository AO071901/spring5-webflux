buildscript {
	ext {
		kotlinVersion = '1.2.10'
		springBootVersion = '2.0.0.M7'
        jooqVersion = '3.10.4'
        jooqGradleVersion = '2.0.9'
        flywayVersion = '4.0.3'
	}
	repositories {
		mavenCentral()
        jcenter()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
//        classpath("org.jooq:jooq-codegen:${jooqVersion}")
        classpath('org.postgresql:postgresql:9.4.1211.jre7')
        classpath("nu.studer:gradle-jooq-plugin:${jooqGradleVersion}")
        classpath("org.flywaydb:flyway-gradle-plugin:${flywayVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'nu.studer.jooq'
apply plugin: 'org.flywaydb.flyway'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin { 
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin { 
    kotlinOptions.jvmTarget = "1.8"
}

repositories { 
    mavenCentral() 
    maven { url "https://repo.spring.io/snapshot" } 
    maven { url "https://repo.spring.io/milestone" }
}


dependencies { 
    compile('org.springframework.boot:spring-boot-starter-webflux') 
    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8") 
    compile("org.jetbrains.kotlin:kotlin-reflect")
    compile('org.springframework.boot:spring-boot-starter-jooq')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.jooq:jooq') 
//    compile('org.jooq:jooq-meta') 
//    compile('org.jooq:jooq-codegen')
//    compile('org.postgresql:postgresql:9.4.1211.jre7')
    jooqRuntime('postgresql:postgresql:9.1-901.jdbc4')
    compile("org.flywaydb:flyway-core")
    compile("org.postgresql:postgresql")
    testCompile('org.springframework.boot:spring-boot-starter-test') 
    testCompile('io.projectreactor:reactor-test')
}

jooq {
    version = '3.10.4'
    edition = 'OSS'
    demo(sourceSets.main) {
        jdbc {
            driver = 'org.postgresql.Driver'
            url = 'jdbc:postgresql://localhost:5432/spring'
            user = 'spring'
            password = 'spring'
//            properties {
//                property {
//                    key = 'ssl'
//                    value = 'true'
//                }
//            }
        }
        generator {
            name = 'org.jooq.util.DefaultGenerator'
            strategy {
                name = 'org.jooq.util.DefaultGeneratorStrategy'
                // ...
            }
            database {
                name = 'org.jooq.util.postgres.PostgresDatabase'
                inputSchema = 'public'
                forcedTypes {
                    forcedType {
                        name = 'varchar'
                        expression = '.*'
                        types = 'JSONB?'
                    }
                    forcedType {
                        name = 'varchar'
                        expression = '.*'
                        types = 'INET'
                    }
                }
                // ...
            }
            generate {
                relations = true
                deprecated = false
                records = true
                immutablePojos = true
                fluentSetters = true
                // ...
            }
            target {
                packageName = 'com.example.demo.db'
                directory = 'src/main/java'
            }
        }
    }
}

flyway { 
    url = 'jdbc:postgresql://localhost:5432/spring' 
    user = 'spring'
    password = 'spring'
    schemas = ['public']
    locations = ["filesystem:$project.projectDir/src/main/resources/db/migration"]
}

generateDemoJooqSchemaSource.dependsOn flywayMigrate
test.dependsOn flywayClean
